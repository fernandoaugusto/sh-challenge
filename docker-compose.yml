version: '3.9'

name: sh-challenge

services:

  mysql:
    image: mysql:latest
    container_name: 'sh-mysql'
    environment:
      MYSQL_DATABASE: 'shdb'
      MYSQL_USER: 'shuser'
      MYSQL_PASSWORD: 'shpass'
      MYSQL_ROOT_PASSWORD: 'shpassroot'
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - '3306:3306'
    volumes:
      - ./apps/.mysql/data:/var/lib/mysql
      - ./.docker-config/mysql/db_setup.sql:/docker-entrypoint-initdb.d/db_setup.sql
    networks:
      - shnet

  rabbitmq:
    image: rabbitmq:latest
    container_name: 'sh-rabbitmq'
    ports:
      # AMQP Protocol Port
      - 5672:5672
      # HTTP Management UI
      - 15672:15672
    volumes:
      - ./apps/.rabbitmq/data/:/var/lib/rabbitmq/
      - ./apps/.rabbitmq/logs/:/var/log/rabbitmq/
      - type: bind
        source: ./.docker-config/rabbitmq/rabbitmq-enabled-plugins
        target: /etc/rabbitmq/enabled_plugins
      - type: bind
        source: ./.docker-config/rabbitmq/rabbitmq.config
        target: /etc/rabbitmq/rabbitmq.config
      - type: bind
        source: ./.docker-config/rabbitmq/rabbitmq-defs.json
        target: /etc/rabbitmq/rabbitmq-defs.json
    networks:
      - shnet

  notifications:
    image: "node:16.17.1"
    container_name: 'sh-notifications'
    working_dir: /home/notifications
    ports:
      - 3001:3001
    volumes:
      - ./apps/notifications:/home/notifications
    depends_on:
      - mysql
      - rabbitmq
    command: bash -c "npm install && npm run start"
    networks:
      - shnet

  tasksappjs:
    image: "node:16.17.1"
    container_name: 'sh-tasksappjs'
    working_dir: /home/tasksappjs
    ports:
      - 3000:3000
    volumes:
      - ./apps/tasksappjs:/home/tasksappjs
    depends_on:
      - mysql
      - rabbitmq
      - notifications
    command: bash -c "npm install && npm run start"
    networks:
      - shnet
      
networks:
  shnet:
    name: 'shnet'
    driver: bridge
